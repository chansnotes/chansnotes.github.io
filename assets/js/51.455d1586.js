(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{399:function(t,a,e){"use strict";e.r(a);var s=e(25),v=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("blockquote",[e("h4",{attrs:{id:"본-글은-udemy에서-제공하는-유료-강좌인-vue-js-complete-guide를-수강하면서-정리한-내용입니다-저작권-문제시-바로-글을-내리도록-하겠습니다"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#본-글은-udemy에서-제공하는-유료-강좌인-vue-js-complete-guide를-수강하면서-정리한-내용입니다-저작권-문제시-바로-글을-내리도록-하겠습니다"}},[t._v("#")]),t._v(" 본 글은 Udemy에서 제공하는 유료 강좌인 Vue.js Complete Guide를 수강하면서 정리한 내용입니다. 저작권 문제시 바로 글을 내리도록 하겠습니다.")])]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("이번 글에서는 Vue 인스턴스와 이 인스턴스가 어떠한 라이프사이클을 가지고 작동이 되는지 정리하려고 합니다. 잘못된 정보 혹은 오탈자등 글에 대한 코멘트는 언제든지 남겨주세요!")]),t._v(" "),e("h2",{attrs:{id:"vue-인스턴스란"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-인스턴스란"}},[t._v("#")]),t._v(" Vue 인스턴스란?")]),t._v(" "),e("ul",[e("li",[t._v("DOM과 HTML의 중개자")]),t._v(" "),e("li",[t._v("Vue 인스턴스는 여러개 생성이 가능하며, 각각은 고유한 Component (이하 컴포넌트)로 구성되어 있음\n"),e("ul",[e("li",[t._v("각 컴포넌트들은 재사용 가능")])])]),t._v(" "),e("li",[t._v("Vue 인스턴스2 에서 1에 정의된 property를 불러올 수 있음")])]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" vm1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... 기타 코드 ... //")]),t._v("\n  data"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    title"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'asd'")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" vm2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 아래처럼 vm1의 instance에 정의된 property를 불러올 수 있음")]),t._v("\n  vm1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Changed'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("ul",[e("li",[t._v("각 인스턴스들은 data property 객체에 있는 모든 속성을 Proxy (프록시) 처리함\n_ Vue 인스턴스에 존재하는 데이터 객체는 Vue watcher에 저장되고 감시를 받게됨\n_ 따라서, data가 변경되면 자동으로 화면이 다시 렌더링됨")])]),t._v(" "),e("h3",{attrs:{id:"vuejs-dom-업데이트-방식"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vuejs-dom-업데이트-방식"}},[t._v("#")]),t._v(" VueJS DOM 업데이트 방식")]),t._v(" "),e("ul",[e("li",[t._v("Vue는 Virtual DOM을 사용하여 느린 DOM 렌더링을 수행하지 않음")]),t._v(" "),e("li",[t._v("Virtual DOM과 Vue instance의 차이를 먼저 확인함")]),t._v(" "),e("li",[t._v("그 후, 바뀐 New virtual DOM (=template)의 부분을 가져와서 Real DOM에 업데이트")])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"vue-인스턴스의-속성들"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-인스턴스의-속성들"}},[t._v("#")]),t._v(" Vue 인스턴스의 속성들")]),t._v(" "),e("p",[t._v("Vue 인스턴스에 추가 가능한 속성들은 2019년 5월 기준 12가지가 있다. ("),e("a",{attrs:{href:"https://kr.vuejs.org/v2/api/#%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%86%8D%EC%84%B1",target:"_blank",rel:"noopener noreferrer"}},[t._v("공식문서참조"),e("OutboundLink")],1),t._v(")\n12가지 중 일반적으로 가장 자주 쓰게 될 3가지를 아래에 정리하였다.")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("$el")])]),t._v(" "),e("ul",[e("li",[t._v("뷰 인스턴스가 관리하게 되는 root DOM 요소")]),t._v(" "),e("li",[t._v("HTML로 정의된 템플릿을 연결")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("$data")])]),t._v(" "),e("ul",[e("li",[t._v("뷰 인스턴스가 가지는 데이터 객체")]),t._v(" "),e("li",[t._v("뷰 인스턴스 범위 밖에서 정의하여도 data: "),e("strong",[t._v("yourData")]),t._v(" 로 명시 후, "),e("code",[t._v("vm.__yourData__")]),t._v(" 로 바로 액세스 가능")]),t._v(" "),e("li",[t._v("데이터 객체는 프록시 처리되어, 데이터 변경시 자동으로 DOM을 업데이트함")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("$ref")])]),t._v(" "),e("ul",[e("li",[t._v("HTML에 있는 요소를 뷰 인스턴스내에서 액세스 가능하게 만들어줌")]),t._v(" "),e("li",[t._v("HTML 요소에 "),e("code",[t._v('ref="__"')]),t._v(" 태그를 추가하여 사용")]),t._v(" "),e("li",[t._v("뷰 인스턴스를 변수로 정의하고, 범위 밖에서도 JavaScript 코드로 사용 가능")])])])]),t._v(" "),e("h3",{attrs:{id:"vue-인스턴스안에-템플릿-만들기"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-인스턴스안에-템플릿-만들기"}},[t._v("#")]),t._v(" Vue 인스턴스안에 템플릿 만들기")]),t._v(" "),e("ul",[e("li",[t._v("뷰 인스턴스안에서 DOM에 렌더링 할 Template을 바로 정의할 수 있음")])]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" vm3 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  template"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<h1> Hello! </h1>'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("ul",[e("li",[t._v("단점:\n"),e("ol",[e("li",[t._v("여러줄로 작성하기 어려움 (String 포맷으로 작성해야하기 때문)")]),t._v(" "),e("li",[t._v("구문 강조 지원도 안되서 가독성이 떨어짐")])])])]),t._v(" "),e("p",[t._v("여기까지가 뷰 인스턴스에 대한 간단한 설명입니다.\n다음으로는 뷰 인스턴스가 어떠한 생애주기를 거쳐서 생성되고 없어지는지 알아보도록 하겠습니다.")]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"vue-라이프사이클"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-라이프사이클"}},[t._v("#")]),t._v(" Vue 라이프사이클")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://vuejs.org/images/lifecycle.png",alt:"vue-lifecycle"}}),t._v("{: .align-center}")]),t._v(" "),e("p",[t._v("위의 그림을 보면 어떤 방식으로 뷰의 라이프사이클이 진행되는지 한눈에 볼 수 있다.\n뷰의 라이프사이클은 간단하게 "),e("code",[t._v("create")]),t._v(", "),e("code",[t._v("mount")]),t._v(", "),e("code",[t._v("update")]),t._v(", "),e("code",[t._v("destroy")]),t._v(" 크게 4가지로 나눌 수 있다.")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("beforeCreate()")])])]),t._v(" "),e("ul",[e("li",[t._v("데이터와 이벤트가 초기화")])]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[e("code",[t._v("created()")])])]),t._v(" "),e("ul",[e("li",[t._v("인스턴스 생성")]),t._v(" "),e("li",[t._v("명시된 템플릿 혹은 "),e("code",[t._v("$el")]),t._v("에 지정된 템플릿을 컴파일함")])]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[e("code",[t._v("beforeMount()")])])]),t._v(" "),e("ul",[e("li",[t._v("el 부분을 컴파일된 템플릿으로 대체")])]),t._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[e("code",[t._v("mounted()")])])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("DOM에 마운트")])]),t._v(" "),e("li",[t._v("뷰 인스턴스가 여기서 DOM이랑 연결됨")]),t._v(" "),e("li",[t._v("이 말은 즉, 뷰 인스턴스의 데이터 객체가 변하게되면 이를 감지하고 DOM으로 자동 업데이트 한다는 뜻\n"),e("ul",[e("li",[e("code",[t._v("beforeUpdate()")]),t._v(" "),e("ul",[e("li",[t._v("데이터 변화를 감지")]),t._v(" "),e("li",[t._v("가상의 DOM에 렌더링")])])]),t._v(" "),e("li",[e("code",[t._v("updated()")]),t._v(" "),e("ul",[e("li",[t._v("가상 DOM에 렌더링 된 것을 실제 DOM에 마운트 시키고 업데이트")])])])])])]),t._v(" "),e("ol",{attrs:{start:"5"}},[e("li",[e("code",[t._v("beforeDestroy()")])])]),t._v(" "),e("ul",[e("li",[t._v("watcher, child component, event listener 등을 모두 제거")])]),t._v(" "),e("ol",{attrs:{start:"6"}},[e("li",[e("code",[t._v("destroyed()")])])]),t._v(" "),e("h3",{attrs:{id:"mount-관련-팁"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mount-관련-팁"}},[t._v("#")]),t._v(" Mount 관련 팁")]),t._v(" "),e("ul",[e("li",[t._v("뷰 인스턴스에서 어디에 mount 할지 정하지 않고, 밖에서 정의 가능")]),t._v(" "),e("li",[t._v("어디에 mount를 해야 할지 모를때에 사용하는 것을 추천\n"),e("ul",[e("li",[e("code",[t._v("vm.$mount('#app');")])])])])]),t._v(" "),e("p",[t._v("이번 포스트에서는 \bVue 인스턴스가 무엇인지 그리고 어떤 속성들을 가졌는지에 대한 간단한 설명을 시작으로,\n이러한 인스턴스가 어떠한 방식으로 DOM과 연계되는지에 대해 알아보았습니다.\n("),e("s",[t._v("부실한 내용은 지적 꼭 부탁드립니다!")]),t._v(")")]),t._v(" "),e("p",[t._v("이제 다음편에서는 Vue 코드로 실제 DOM과 인터액션을 하는 방법에 대해 알아보도록 하겠습니다.")])])}),[],!1,null,null,null);a.default=v.exports}}]);