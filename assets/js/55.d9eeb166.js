(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{406:function(v,e,l){"use strict";l.r(e);var t=l(25),_=Object(t.a)({},(function(){var v=this,e=v.$createElement,l=v._self._c||e;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("blockquote",[l("p",[v._v("본 글은 Udemy에서 제공하는 유료 강좌인 Vue.js Complete Guide를 수강하면서 정리한 내용입니다. 저작권 문제시 바로 글을 내리도록 하겠습니다.")])]),v._v(" "),l("hr"),v._v(" "),l("p",[v._v("이전 글에서 잠깐 보았던 v-디렉티브들 기억하시나요?\n이번 글에서는 v-디렉티브들 중, element class 및 style을 조작할 수 있게해주는 "),l("code",[v._v("v-bind")]),v._v("에 대해 정리하려고 합니다.\n"),l("code",[v._v("v-bind")]),v._v("는 쉽게 말해 class 혹은 style 태그에 데이터를 바인드 시켜주는 역할을 합니다.\n먼저 HTML 태그의 속성인 "),l("code",[v._v("class")]),v._v("에 바인딩 하는법을 정리한 뒤,\n우리의 DOM 객체들을 아름답게 꾸며줄 "),l("code",[v._v("style")]),v._v("에 바인딩 하는법을 정리하도록 하겠습니다.")]),v._v(" "),l("h2",{attrs:{id:"html-클래스-바인딩"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#html-클래스-바인딩"}},[v._v("#")]),v._v(" HTML 클래스 바인딩")]),v._v(" "),l("ul",[l("li",[l("p",[l("code",[v._v('<div v-bind:class="{ 특정 클래스: 발동 조건 }"></div>')])]),v._v(" "),l("ul",[l("li",[v._v("클래스 바인딩은 "),l("code",[v._v("v-bind:class")]),v._v("로 객체를 전달")]),v._v(" "),l("li",[v._v("큰따옴표안에 Interpolation (Mustache) 넣기")]),v._v(" "),l("li",[v._v("왼쪽은 HTML element에 추가할 클래스 속성")]),v._v(" "),l("li",[v._v("오른쪽은 왼쪽에 추가할 클래스 속성이 언제 사용되어야 하는지 조건을 정의\n"),l("ul",[l("li",[v._v("발동 조건이 false로 정의되어 있으면, class 속성 추가 안됨")])])])])]),v._v(" "),l("li",[l("p",[l("strong",[v._v("Computed 속성에도 바인딩이 가능!!!")])]),v._v(" "),l("ul",[l("li",[v._v("Interpolation 없이, 큰따옴표 안에 Computed property 함수 넣기")])])]),v._v(" "),l("li",[l("p",[l("strong",[v._v("Array 바인딩")])]),v._v(" "),l("ul",[l("li",[l("code",[v._v("[firstClass, secondClass]")]),v._v("를 v-bind 객체로 전달 가능")]),v._v(" "),l("li",[v._v("발동 조건이 없는 클래스라면, 항상 element에 적용")]),v._v(" "),l("li",[v._v("삼항 연산자를 사용할 때에 Array로 전달하기")])])])]),v._v(" "),l("hr"),v._v(" "),l("h2",{attrs:{id:"style-바인딩"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#style-바인딩"}},[v._v("#")]),v._v(" Style 바인딩")]),v._v(" "),l("ul",[l("li",[l("code",[v._v("<div v-bind:style=\"{ color: activeColor, fontSize: fontSize + 'px'}\">")]),v._v(" "),l("ul",[l("li",[v._v("스타일 바인딩은 "),l("code",[v._v("v-bind:style")]),v._v("로 객체를 전달\n"),l("ul",[l("li",[v._v("CSS와 동일해보이나, 사실 JavaScript 객체임")])])]),v._v(" "),l("li",[v._v("되도록이면 스타일 객체를 data 속성에 정의하고 사용하는 것이 좋음")]),v._v(" "),l("li",[v._v("HTML 클래스와 마찬가지로 Array 바인딩 가능")])])])]),v._v(" "),l("hr"),v._v(" "),l("p",[v._v("이번 포스트에서는 Vue 템플릿으로 생성되는 HTML element의 클래스와 스타일 속성에 데이터 객체를 보내는 방법에 대해 알아보았습니다.\n부실한 내용이나 틀린 내용이 있다면 자유롭게 댓글로 달아주세요 😃")])])}),[],!1,null,null,null);e.default=_.exports}}]);